<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Done</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link href="/css/home.css" rel="stylesheet" type="text/css">

    <link
        rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.css"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


</head>

<body>
    <nav class="navbar navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="/success"><%=userName %></a>
            <a class="navbar-brand" href="/success">Upload</a>
            <a class="navbar-brand" href="/gallery">Gallery</a>
            <a class="navbar-brand btn btn-dark btn-small" style="color: white;" href="/logout">Logout</a>
        </div>
    </nav>

    <div class="wrapper">
        <div class="editor-container">
            <div class="image-container">
                <img id="image" />
            </div>
            <input type="file" id="file" accept="image/*" />
            <label for="file">Open A Photo</label>
            <div class="options-btn hide">
                <button id="rotate-left">
                <img src="/images/rotate-left.png" />
                </button>
                <button id="rotate-right">
                <img src="/images/rotate-right.png" />
                </button>
                <button id="scale-X-button">
                <img src="/images/flip-hori.png" />
                </button>
                <button id="scale-Y-button">
                <img src="/images/flip-ver.png" />
                </button>
                <button class="aspect-ratio-btns">16:9</button>
                <button class="aspect-ratio-btns">4:3</button>
                <button class="aspect-ratio-btns">1:1</button>
                <button class="aspect-ratio-btns">2:3</button>
                <button class="aspect-ratio-btns">Free</button>
            </div>
            <div class="action-btns">
                <button id="preview" class="hide">Preview</button>
                <a href="" id="upload" class="hide">Upload</a>
                <div id="loading-overlay" class="overlay">
                    <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="preview-container">
            <img id="preview-image" />
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
        const userID = '<%= userID %>';
        localStorage.setItem('userID', userID);
    });
    const loadingOverlay = document.getElementById("loading-overlay");

    let fileInput = document.getElementById("file");
    let image = document.getElementById("image");
    let uploadButton = document.getElementById("upload");
    let aspectRatioBtns = document.querySelectorAll(".aspect-ratio-btns");
    const rotateRightButton = document.getElementById("rotate-right");
    const rotateLeftButton = document.getElementById("rotate-left");
    const scaleXButton = document.getElementById("scale-X-button");
    const scaleYButton = document.getElementById("scale-Y-button");
    const previewButton = document.getElementById("preview");
    const previewImage = document.getElementById("preview-image");
    const options = document.querySelector(".options-btn");
    let cropper = "";
    let fileName = "";
    let scaleXClick = false,
    scaleYClick = false;
    let rotateRightValue = -45,
    rotateLeftValue = 45;

    window.onload = () => {
        uploadButton.classList.add("hide");
        options.classList.add("hide");
        previewButton.classList.add("hide");
    };

    fileInput.onchange = () => {
    let reader = new FileReader();
    reader.readAsDataURL(fileInput.files[0]);
    reader.onload = () => {
        image.setAttribute("src", reader.result);
        if (cropper) {
        cropper.destroy();
        }
        cropper = new Cropper(image);
        options.classList.remove("hide");
        previewButton.classList.remove("hide");
    };
    fileName = fileInput.files[0].name.split(".")[0];
    };

    aspectRatioBtns.forEach((element) => {
        element.addEventListener("click", () => {
            if (element.innerText == "Free") {
            cropper.setAspectRatio(NaN);
            } else {
            cropper.setAspectRatio(eval(element.innerText.replace(":", "/")));
            }
        });
    });

    rotateRightButton.addEventListener("click", () => {
    cropper.rotate(rotateRightValue);
    });

    rotateLeftButton.addEventListener("click", () => {
    cropper.rotate(rotateLeftValue);
    });

    scaleXButton.addEventListener("click", () => {
    if (scaleXClick) {
        cropper.scaleX(1);
        scaleXClick = false;
    } else {
        cropper.scaleX(-1);
        scaleXClick = true;
    }
    });

    scaleYButton.addEventListener("click", () => {
    if (scaleYClick) {
        cropper.scaleY(1);
        scaleYClick = false;
    } else {
        cropper.scaleY(-1);
        scaleYClick = true;
    }
    });

    previewButton.addEventListener("click", () => {
        uploadButton.classList.remove("hide");
    let imgSrc = cropper.getCroppedCanvas({}).toDataURL();
    previewImage.src = imgSrc;
    });

    uploadButton.addEventListener("click", (e) => {
        e.preventDefault();
        loadingOverlay.style.display = "block";
        console.log("Clicked")
        cropper.getCroppedCanvas().toBlob((blob) => {
        const formData = new FormData();
        formData.append('image', blob);
        formData.append('imageName', fileName); 

        fetch('/upload', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            console.log('Image uploaded successfully:', data)
            loadingOverlay.style.display = "none";;
        })
        .catch(error => {
            console.error('Error uploading image:', error);
            loadingOverlay.style.display = "none";
        });
        }); 
    }

    );
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
            crossorigin="anonymous"></script>
    <script src="ejs.min.js"></script>
</body>

</html>